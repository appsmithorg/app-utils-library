!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.jsUtilityLibrary=t():e.jsUtilityLibrary=t()}(self,()=>{return a={10:(e,t,r)=>{r=r(845);e.exports=r},845:e=>{e.exports={getUniqueValues:function(e,t){return Array.isArray(e)&&"string"==typeof t?(e=e.map(e=>e[t]),[...new Set(e)]):[]},generateId:function(e,t=10){let r;switch(e){case"random":var a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",o=a.length;r="";for(let e=0;e<t;e++)r+=a.charAt(Math.floor(Math.random()*o));break;case"uuid":r=([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,e=>(e^crypto.getRandomValues(new Uint8Array(1))[0]&15>>e/4).toString(16));break;default:return null}return r.toString()},filterQueryFactoryPostgres:function(e){return e.map(function(e,t){e.operator=t?e.operator:"WHERE";var{column:t,condition:e,value:r,operator:a}=e;return{is:a+` ${t} = '${r}'`,isAfter:a+` ${t} > '${r}'`,isBefore:a+` ${t} < '${r}'`,isNot:a+` ${t} != '${r}'`,empty:a+` ${t} IS NULL`,notEmpty:a+` ${t} IS NOT NULL`}[e]||{empty:a+` ${t} IS NULL`,lessThan:a+` ${t} < `+r,notEmpty:a+` ${t} IS NOT NULL`,isEqualTo:a+` ${t} = `+r,notEqualTo:a+` ${t} != `+r,greaterThan:a+` ${t} > `+r,isExactly:a+` ${t} = '${r}'`,endsWith:a+` ${t} LIKE '%${r}'`,contains:a+` ${t} LIKE '%${r}%'`,startsWith:a+` ${t} LIKE '${r}%'`,lessThanEqualTo:a+` ${t} <= `+r,greaterThanEqualTo:a+` ${t} >= `+r,doesNotContain:a+` ${t} NOT LIKE '%${r}%'`}[e]}).join(" ")},filterQueryFactoryMongo:function(e){var t=[];for(const l of e)if(l&&l.column&&l.condition&&void 0!==l.value){var{column:r,condition:a,value:o}=l,n={};switch(a){case"empty":n[r]={$eq:null};break;case"lessThan":n[r]={$lt:o};break;case"notEmpty":n[r]={$ne:null};break;case"isEqualTo":n[r]=o;break;case"notEqualTo":n[r]={$ne:o};break;case"greaterThan":n[r]={$gt:o};break;case"isExactly":n[r]=o;break;case"endsWith":n[r]={$regex:`.*${o}$`};break;case"contains":n[r]={$regex:`.*${o}.*`};break;case"startsWith":n[r]={$regex:`^${o}.*`};break;case"lessThanEqualTo":n[r]={$lte:o};break;case"greaterThanEqualTo":n[r]={$gte:o};break;case"doesNotContain":n[r]={$not:{$regex:`.*${o}.*`}};break;case"isAfter":n[r]={$gt:new Date(o)};break;case"isBefore":n[r]={$lt:new Date(o)};break;case"isOn":var s=new Date(o),i=new Date(o);i.setDate(i.getDate()+1),n[r]={$gte:s,$lt:i};break;default:console.error("Unsupported condition: "+a)}t.push(n)}else console.error("Invalid filter object:",l);return 0<t.length?{$and:t}:{}}}}},o={},function e(t){var r=o[t];return void 0===r&&(r=o[t]={exports:{}},a[t](r,r.exports,e)),r.exports}(10);var a,o});